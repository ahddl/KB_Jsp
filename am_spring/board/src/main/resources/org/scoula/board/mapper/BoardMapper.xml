<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- namespace에는 인터페이스이름까지 넣어줌. -->
<!-- 패키지경로와 인터페이스명은 슬랙에 복사하는 방법있음. -->

<mapper namespace="org.scoula.board.mapper.BoardMapper">

    <!-- insert는 대부분 입력값이 vo임. 생략가능 -->
    <!-- insert, update, delete는 무조건 결과는 int임. 생략가능 -->
    <!-- id는 인터페이스의 함수와 동일해야 함수를 호출했을 때, mapper의 sql문이 실행됨.-->
    <!-- insert하고 나서 자동증가한 no를 vo의 no변수에 자동으로 넣고 싶으면 selectKey태그를 추가해주세요.-->

    <delete id="delete">
        delete
        from tbl_board
        where no = #{no}
    </delete>

    <update id="update">
        update tbl_board
        set title       = #{title},
            content     = #{content},
            writer      = #{writer},
            update_date = now()
        where no = #{no}
    </update>

    <insert id="create">
        insert into tbl_board(title, content, writer)
        values (#{title}, #{content}, #{writer})

        -- 동적생성 PK : 생성된 기본키 값 획득 (이전 아이디를 PK값을 넣어줌)
        <selectKey resultType="Long" keyProperty="no" keyColumn="no" order="AFTER">
            SELECT LAST_INSERT_ID()
        </selectKey>

    </insert>

    <!-- vo에 있는 해당 필드명과 동일한 것을 넣어주면 get항목명()이 호출됨. -->
    <select id="getList"
            resultType="BoardVO">
        select *
        from tbl_board
        order by no desc
    </select>

    <!-- vo에 있는 해당 필드명과 동일한 것을 넣어주면 get항목명()이 호출됨. -->
    <!--    parameterType="long" 생략가능. 입력값 1개, ,pk인 경우 -->
<!--    <select id="get"-->
<!--            parameterType="long"-->
<!--            resultType="BoardVO">-->
<!--        select *-->
<!--        from tbl_board-->
<!--        where no = #{no}-->
<!--    </select>-->

    <!-- *** get 수정 *** -->
    <!--
        1. 게시글과 첨부파일을 조인하여 조회
        2. 조회된 결과를 "boardMap" ResultMap을 이용해 Java 객체에 매핑
    -->
    <select id="get" resultMap="boardMap">
        SELECT b.*,
               a.no as ano, a.bno, a.filename, a.path,
               a.content_type, a.size, a.reg_date as a_reg_date
        FROM tbl_board b
                 LEFT OUTER JOIN tbl_board_attachment a ON b.no = a.bno
        WHERE b.no = #{no}
        ORDER BY filename
    </select>

    <!-- 첨부파일 등록 -->
    <insert id="createAttachment">
        INSERT INTO tbl_board_attachment(filename, path, content_type, size, bno)
        VALUES(#{filename}, #{path}, #{contentType}, #{size}, #{bno})
    </insert>

    <!-- 게시글의 첨부파일 목록 조회 -->
    <select id="getAttachmentList" resultType="org.scoula.board.domain.BoardAttachmentVO">
        SELECT * FROM tbl_board_attachment
        WHERE bno = #{bno}
        ORDER BY filename
    </select>

    <!-- 특정 첨부파일 조회 -->
    <select id="getAttachment" resultType="org.scoula.board.domain.BoardAttachmentVO">
        SELECT * FROM tbl_board_attachment
        WHERE no = #{no}
    </select>

    <!-- 첨부파일 삭제 -->
    <delete id="deleteAttachment">
        DELETE FROM tbl_board_attachment
        WHERE no = #{no}
    </delete>


    <!-- *** ResultMap을 이용한 조인 처리 *** -->
    <!-- 첨부파일 ResultMap 정의 -->
    <!--
        * 조회된 컬럼명과 Java 프로퍼티명이 다른 경우 매핑 작업 필수 *
        <id column="ano" property="no"/>
          <result column="a_reg_date" property="regDate"/>
    -->
    <resultMap id="attachmentMap" type="org.scoula.board.domain.BoardAttachmentVO">
        <id column="ano" property="no"/>
        <result column="bno" property="bno"/>
        <result column="filename" property="filename"/>
        <result column="path" property="path"/>
        <result column="contentType" property="contentType"/>
        <result column="size" property="size"/>
        <result column="a_reg_date" property="regDate"/>
    </resultMap>

    <!-- 게시글 + 첨부파일 통합 ResultMap -->
    <!--
        <collection>을 통해 하나의 게시글에 여러 첨부파일이 연결되는 1:N 관계를 처리
     -->
    <resultMap id="boardMap" type="org.scoula.board.domain.BoardVO">
        <id column="no" property="no"/>
        <result column="title" property="title"/>
        <result column="content" property="content"/>
        <result column="writer" property="writer"/>
        <result column="reg_date" property="regDate"/>
        <result column="update_date" property="updateDate"/>

        <!-- 첨부파일 컬렉션 매핑 -->
<!--        하나의 게시글에 여러  첨부 파일이 연결되는 1:N 관계 처리-->
        <collection property="attaches" resultMap="attachmentMap"/>
    </resultMap>

    <!--
        [결과 처리 과정]

        1. id="get" SQL 실행으로 조인된 조회 결과 반환
        2. 조회된 결과를 <resultMap id="boardMap> 을 이용해 Java 객체에 매핑
        3. "boardMap"이 각 행의 게시글 부분 컬럼을 `BoardVO` 객체로 변환
        4. 첨부파일 부분 컬럼은
          <collection property="attaches" resultMap="attachmentMap">을 통해
          BoardAttachmentVO 객체로 변환
        5. 변환된 BoardAttachmentVO는 BoardVO.attaches 필드에 자동 추가(add)
        6. 최종 완성된 BoardVO 객체 반환
    -->


</mapper>